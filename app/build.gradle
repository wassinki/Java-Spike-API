/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details take a look at the 'Building Java & JVM projects' chapter in the Gradle
 * User Manual available at https://docs.gradle.org/7.5.1/userguide/building_java_projects.html
 */

plugins {
    // Apply the application plugin to add support for building a CLI application in Java.
    id 'application'
    id 'maven-publish'

}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

dependencies {
    ext.libraries = [
            junit: [ // Groovy list lit
                     'org.easymock:easymock:4.3',
                     'org.hamcrest:hamcrest:2.2',
                     platform("org.junit:junit-bom:5.9.0"),
                     "org.junit.jupiter:junit-jupiter-api",
                     "org.junit.jupiter:junit-jupiter-params"
            ]
    ]


    // Use JUnit test framework.

    implementation group: 'com.fazecast', name: 'jSerialComm', version: '2.9.1'
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.0.1'
    testImplementation 'org.easymock:easymock:4.2'

    // This dependency is used by the application.
    implementation 'com.google.guava:guava:31.0.1-jre'

    implementation 'org.apache.commons:commons-lang3:3.12.0'

    testImplementation libraries.junit
    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine"
}

application {
    // Define the main class for the application.
    mainClass = 'ritse.spike.App'
}

tasks.named('test') {
    // Use JUnit Platform for unit tests.
    useJUnitPlatform()
}

publishing {
    publications {
        maven(MavenPublication) {
            groupId = 'ritseh'
            artifactId = 'java-spike-api'
            version = '0.1'
            from components.java
        }
    }
    repositories {
        maven {
            name = "GitHubPackages"
            url = "https://maven.pkg.github.com/ritseh/java-spike-api"
            credentials {
                username = System.getenv("GITHUB_ACTOR")
                password = System.getenv("GITHUB_TOKEN")
            }
        }
    }

}